name: Deploy AVD to the ARPA-H Tenant
on:
    workflow_dispatch:
      inputs:
        environment:
          type: choice
          description: Choose environment to deploy
          options: 
          - personal

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
 
      - name: OIDC Login to Azure Public Cloud
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Deploy AVD Personal Host Pool
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          #subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          region: centralus
          template: ./workload/bicep/deploy-baseline-personal-host-pool-arpah.bicep
          #parameters: ./workload/bicep/parameters/deploy-baseline-parameters-personal-host-pool-arpah.bicep  
          parameters:
            deploymentPrefix=avda
            deploymentEnvironment=Prod
            avdWorkloadSubsId=${{ secrets.SUBSCRIPTION_ID }} 
            avdVmLocalUserName=${{ secrets.AVD_VM_LOCALUSER_NAME }} 
            avdVmLocalUserPassword=${{ secrets.AVD_VM_LOCALUSER_PASSWORD }} 
            avdEnterpriseAppObjectId=${{ secrets.AZURE_AVD_OBJECT_ID }} 
            existingHubVnetResourceId=${{ secrets.EXISTING_HUB_VNET_RESOURCE_ID }}
            #imageGallerySubscriptionId=${{ secrets.IMAGE_GALLERY_SUB_ID }} 
            # existingVnetAvdSubnetResourceId=${{ secrets.AVD_SUBNET_ID }} 
            # existingVnetPrivateEndpointSubnetResourceId=${{ secrets.AVD_SUBNET_ID }} 
            # avdDomainJoinUserName=${{ secrets.AD_JOIN_USER }} 
            # identityDomainName=${{ secrets.AD_NAME}} 
            #avdDomainJoinUserPassword=${{ secrets.AD_JOIN_PASS }} 
            #avdOuPath="${{ secrets.AD_OU }}" 
            #storageOuPath="${{ secrets.AD_OU }}" 
            # storageFilePrivateEndpointStaticIp="${{ secrets.STORAGEFILEPRIVATEENDPOINTSTATICIP }}" 
            # storageFilePrivateEndpointStaticIpRemote="${{ secrets.STORAGEFILEPRIVATEENDPOINTSTATICIPREMOTE }}" 
            # securityPrincipalId="${{ secrets.SECURITY_PRINCIPAL_ID }}" 
            # securityPrincipalName="${{ secrets.SECURITY_PRINCIPAL_NAME }}"
          failOnStdErr: false

    #   - name: Deploy AVD Personal Host Pool
    #     uses: azure/arm-deploy@v2
    #     with:
    #         scope: subscription
    #         region: centralus
    #         #deploymentMode: 'Complete'
    #         template: ./workload/bicep/deploy-baseline-personal-host-pool-arpah.bicep
    #         parameters:
    #           resourcePrefix=mlz
    #           environmentAbbreviation=dev
    #           hubSubscriptionId=${{ secrets.HUB_SUB_ID }}  
    #           operationsSubscriptionId=${{ secrets.OPS_SUB_ID }} 
    #           sharedServicesSubscriptionId=${{ secrets.SS_SUB_ID }} 
    #           identitySubscriptionId=${{ secrets.IDENTITY_SUB_ID }} 
    #           hubVirtualNetworkAddressPrefix=${{ secrets.HUB_VNET_PREFIX }} 
    #           hubSubnetAddressPrefix=${{ secrets.HUB_SNET_PREFIX }} 
    #           operationsVirtualNetworkAddressPrefix=${{ secrets.OPS_VNET_PREFIX }} 
    #           operationsSubnetAddressPrefix=${{ secrets.OPS_SNET_PREFIX }} 
    #           sharedServicesVirtualNetworkAddressPrefix=${{ secrets.SS_VNET_PREFIX }} 
    #           sharedServicesSubnetAddressPrefix=${{ secrets.SS_SNET_PREFIX }}
    #           identityVirtualNetworkAddressPrefix=${{ secrets.IDENTITY_VNET_PREFIX }}
    #           identitySubnetAddressPrefix=${{ secrets.IDENTITY_SNET_PREFIX}}
    #           firewallClientSubnetAddressPrefix=${{ secrets.FW_CLIENT_SNET_PREFIX }}
    #           firewallManagementSubnetAddressPrefix=${{ secrets.FW_MGMT_SNET_PREFIX }}
    #           bastionHostSubnetAddressPrefix=${{ secrets.BASTION_SNET_PREFIX }}
    #           windowsVmAdminPassword=${{ secrets.WIN_VM_ADMIN_PWD }}
    #           firewallSupernetIPAddress=${{ secrets.SUPERNET_ADDRESS}}
    #         failOnStdErr: false
