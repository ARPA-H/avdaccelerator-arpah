name: Deploy AVD to the ARPA-H Tenant
on:
    workflow_dispatch:
      inputs:
        environment:
          type: choice
          description: Choose environment to deploy
          options: 
          - personal

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    #runs-on: windows-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
 
      - name: OIDC Login to Azure Public Cloud
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Azure CLI script
        id: step_one
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo vnet-address=$(az keyvault secret show --vault-name ${{ secrets.KEY_VAULT }} --name avd-vnet-address-prefix --query value --out tsv) >> $GITHUB_ENV
            echo subnet-address=$(az keyvault secret show --vault-name ${{ secrets.KEY_VAULT }} --name avd-subnet-address-prefix --query value --out tsv) >> $GITHUB_ENV
            echo pep-subnet-address=$(az keyvault secret show --vault-name ${{ secrets.KEY_VAULT }} --name avd-pep-subnet-address-prefix --query value --out tsv) >> $GITHUB_ENV

            echo vm-local-user=$(az keyvault secret show --vault-name ${{ secrets.KEY_VAULT }} --name avd-vm-localuser-name --query value --out tsv) >> $GITHUB_ENV
            echo vm-local-password=$(az keyvault secret show --vault-name ${{ secrets.KEY_VAULT }} --name avd-vm-localuser-password --query value --out tsv) >> $GITHUB_ENV
            echo hub-id=$(az keyvault secret show --vault-name ${{ secrets.KEY_VAULT }} --name avd-hub-resource-id --query value --out tsv) >> $GITHUB_ENV

            echo avd-subnet-resource-id=$(az keyvault secret show --vault-name ${{ secrets.KEY_VAULT }} --name avd-subnet-resource-id --query value --out tsv) >> $GITHUB_ENV
            echo avd-pe-subnet-resource-id=$(az keyvault secret show --vault-name ${{ secrets.KEY_VAULT }} --name avd-pe-subnet-resource-id --query value --out tsv) >> $GITHUB_ENV
            echo avd-laws-resource-id=$(az keyvault secret show --vault-name ${{ secrets.KEY_VAULT }} --name avd-laws-resource-id --query value --out tsv) >> $GITHUB_ENV

      - name: Deploy AVD Personal Host Pool
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          region: centralus
          template: ./workload/bicep/deploy-baseline-personal-host-pool-arpah.bicep
          parameters: ./workload/bicep/parameters/deploy-baseline-parameters-personal-host-pool-arpah.json avdWorkloadSubsId=${{ secrets.SUBSCRIPTION_ID }} avdVmLocalUserName=${{ env.vm-local-user }} avdVmLocalUserPassword=${{ env.vm-local-password }} avdEnterpriseAppObjectId=${{ secrets.AZURE_AVD_OBJECT_ID }} existingHubVnetResourceId=${{ env.hub-id }} avdVnetworkAddressPrefixes=${{ env.vnet-address }} vNetworkAvdSubnetAddressPrefix=${{ env.subnet-address }} vNetworkPrivateEndpointSubnetAddressPrefix=${{ env.pep-subnet-address }} existingVnetAvdSubnetResourceId=${{ env.avd-subnet-resource-id }} existingVnetPrivateEndpointSubnetResourceId=${{ env.avd-pe-subnet-resource-id }} alaExistingWorkspaceResourceId=${{ env.avd-laws-resource-id }}
          additionalArguments:
            #avdWorkloadSubsId=${{ secrets.SUBSCRIPTION_ID }} 
            # avdVmLocalUserName=${{ env.vm-local-user }} 
            # avdVmLocalUserPassword=${{ env.vm-local-password }} 
            # avdEnterpriseAppObjectId=${{ secrets.AZURE_AVD_OBJECT_ID }} 
            # existingHubVnetResourceId=${{ env.hub-id }}
            # avdVnetworkAddressPrefixes=${{ env.vnet-address }} 
            # vNetworkAvdSubnetAddressPrefix=${{ env.subnet-address }} 
            # vNetworkPrivateEndpointSubnetAddressPrefix=${{ env.pep-subnet-address }} 
          failOnStdErr: false

      # - name: Update AVD Application Group Display Name in the ${{ github.event.inputs.environment }} environment
      #   uses: azure/powershell@v2
      #   env:
      #     ResourceGroupName: 'avd-nih-arpah-${{ github.event.inputs.environment }}-use2-service-objects'
      #     ApplicationGroupName: 'vdag-desktop-app1-${{ github.event.inputs.environment }}-use2-001'
      #     Name: 'SessionDesktop'
      #     FriendlyName: 'ARPA-H Windows Desktop'
      #   with:
      #     inlineScript: ./.github/workflows/scripts/update_app_display_name.ps1 -ResourceGroupName ${{ env.ResourceGroupName }} -ApplicationGroupName  ${{ env.ApplicationGroupName }} -Name  ${{ env.Name }} -FriendlyName  '${{ env.FriendlyName }}'
      #     azPSVersion: "latest"
      #     errorActionPreference: continue